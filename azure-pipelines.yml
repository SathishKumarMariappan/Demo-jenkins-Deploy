# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '20.x'
          checkLatest: true
        displayName: 'Install Node.js 20.x'

      - script: |
          cd demo-app/
          npm install -g @angular/cli
          npm install
          ng build
        displayName: 'npm install and build'
        workingDirectory: '$(Build.SourcesDirectory)'
      - task: CmdLine@2
        displayName: "Run unit tests"
        inputs:
          script: |
            cd demo-app/
            ng test --browsers=ChromeHeadless --code-coverage --watch=false
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/demo-app/dist/demo-app/browser'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          ArtifactName: 'drop'
          publishLocation: 'Container'

- stage: Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentDevelopment
    pool:
      vmImage: 'ubuntu-latest'
    environment: Development
    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureWebApp@1
            displayName: 'Deploy App Service'
            inputs:
              azureSubscription: 'Azure subscription 1(52d86f62-f3a8-47bd-90d8-ea30eb60c047)'
              appType: 'webAppLinux'
              appName: '21022024'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|20-lts'
              startUpCommand: 'pm2 serve /home/site/wwwroot -no-daemon-spa'

- stage: QA
  dependsOn: [ Development ]
  displayName: 'Deploy to QA'
  jobs:
    - job:  DeployToQA
      displayName: 'DeployQA'
      steps:
      - script: echo Deploying to QA

- stage: Production
  dependsOn: [ QA ]
  displayName: 'Deploy to Production'
  jobs:
    - deployment: DeployProduction
      pool:
        vmImage: 'ubuntu-latest'
      environment: Production
      strategy:
        runOnce:
          deploy:
            steps:
            - script: echo Deploying to Production
